"use strict";(self.webpackChunkpersonal_site=self.webpackChunkpersonal_site||[]).push([[358],{5358:function(e,t,o){o.r(t);o(2791);var i=o(1087),s=o(6842),a=o(184);t.default=function(){return(0,a.jsx)(s.Z,{title:"Projects",description:"Learn more about Arthur Chevalley's shorter projects.",children:(0,a.jsxs)("article",{className:"post",id:"projects_study",children:[(0,a.jsx)("header",{children:(0,a.jsxs)("div",{className:"title",children:[(0,a.jsx)("h2",{children:(0,a.jsx)(i.rU,{to:"https://github.com/arthurchevalley/LOOMO-robot-navigation-alorigthm",children:"Loomo Navigation"})}),(0,a.jsxs)("p",{children:["The main goal of this project was to make a ",(0,a.jsx)(i.rU,{to:"https://store.segway.com/segway-loomo-mini-transporter-robot-sidekick",children:"Loomo"})," robot capable of detecting and following a specific person. This was achieved using ",(0,a.jsx)(i.rU,{to:"https://github.com/WongKinYiu/yolor",children:"YoloR"})," detector, ",(0,a.jsx)(i.rU,{to:"https://github.com/nwojke/deep_sort",children:"DeepSORT"})," algorithm as well as  ",(0,a.jsx)(i.rU,{to:"https://github.com/google/mediapipe",children:"MediaPipe"})," to detect a specific human pose. Before, conducting a robot race, the algorithm was developed to be launched on ",(0,a.jsx)(i.rU,{to:"https://colab.research.google.com/",children:"Google Colab"})," using a laptop webcam."]})]})}),(0,a.jsx)("header",{children:(0,a.jsxs)("div",{className:"title",children:[(0,a.jsx)("h2",{children:(0,a.jsx)(i.rU,{to:"https://github.com/arthurchevalley/Thymio-Path-Planning-and-Control",children:"Thymio Navigation"})}),(0,a.jsxs)("p",{children:[" This project is implementing three algorithm to navigate a ",(0,a.jsx)(i.rU,{to:"https://www.thymio.org/",children:"Thymio"})," robot in a semi-static environment. The first algorithm is detecting the robot, fixed obstacles and goal using a webcam providing global view. The second is the A* path planning algorithm to planned the best path possible. Finally, the robot navigation is controlled with the help of an ",(0,a.jsx)(i.rU,{to:"https://en.wikipedia.org/wiki/Extended_Kalman_filter",children:"extended kalman filter"}),"to allow temporary webcam occlusion and movable obstacles avoidance using IR sensors."]})]})}),(0,a.jsx)("header",{children:(0,a.jsxs)("div",{className:"title",children:[(0,a.jsx)("h2",{children:(0,a.jsx)(i.rU,{to:"https://github.com/GusJea/Projet-micro-informatique",children:"E-Puck 2 Navigation"})}),(0,a.jsxs)("p",{children:[" For this project the goal is to navigate an ",(0,a.jsx)(i.rU,{to:"https://www.gctronic.com/doc/index.php/e-puck2",children:"epuck 2"})," unicycle to a specific point. This point varying as it is defined by the source of emission of a 778 Hz sound. In addition, IR sensors are used to avoid obstacles on the vicinity of the robot while a TOF sensor is used to detect further obstacles and correct the trajectory. Note that there is no knowledge of the environment as the obstacles can have any shapes and position."]})]})})]})})}}}]);
//# sourceMappingURL=358.8957317c.chunk.js.map